@model dynamic

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Event</title>
    <style>
        body {
            background-color: #121212;
            color: #ffffff;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
        }

        nav {
            background-color: #1f1f1f;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 24px;
            font-weight: bold;
            color: #ff6b6b;
        }

            .logo span {
                color: #ffffff;
            }

        .navwords {
            list-style: none;
            display: flex;
            gap: 20px;
        }

            .navwords li a {
                color: #ffffff;
                text-decoration: none;
                transition: color 0.3s ease;
            }

                .navwords li a:hover {
                    color: #ff6b6b;
                }

        .container {
            max-width: 800px;
            margin: 40px auto;
            padding: 20px;
            background-color: #1e1e1e;
            border-radius: 10px;
        }

        h1 {
            text-align: center;
            color: #ff6b6b;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #b3b3b3;
        }

        input, select, textarea {
            width: 100%;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background-color: #2c2c2c;
            color: #ffffff;
        }

        .update-button {
            background-color: #ff6b6b;
            color: #ffffff;
            border: none;
            padding: 12px 25px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            display: block;
            margin: 0 auto;
        }

            .update-button:hover {
                background-color: #e05454;
            }

        .event-category {
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8em;
            margin-left: 10px;
        }

        .sports-category {
            background: #2196F3;
            color: white;
        }

        .entertainment-category {
            background: #FF9800;
            color: white;
        }
    </style>
</head>
<body>
    <nav>
        <div class="logo">Vendor<span>Hub</span></div>
        <ul class="navwords">
            <li><a href="@Url.Action("Dashboard", "Vendor")">Dashboard</a></li>
            <li><a href="@Url.Action("Profile", "User")">Profile</a></li>
            <li><a href="@Url.Action("SignOut", "User")">Sign Out</a></li>
        </ul>
    </nav>

    <div class="container">
        <h1>Edit Event</h1>
        <form id="editForm">
            <input type="hidden" name="id" value="@Model?.Id" />
            <input type="hidden" name="eventType" value="@Model?.EventType" />

            <div class="form-group">
                <label for="name">Event Name</label>
                <input type="text" id="name" name="name" value="@Model?.Name" required />
            </div>

            <div class="form-group">
                <label for="date">Date</label>
                <input type="datetime-local" id="date" name="date" value="@Model?.Date.ToString("yyyy-MM-ddTHH:mm")" required />
            </div>

            <div class="form-group">
                <label for="location">Location</label>
                <input type="text" id="location" name="location" value="@Model?.Location" required />
            </div>

            <div class="form-group">
                <label for="numberOfSeats">Available Seats</label>
                <input type="number" id="numberOfSeats" name="numberOfSeats" value="@Model?.NumberOfSeats" required />
            </div>

            <div class="form-group">
                <label for="price">Price ($)</label>
                <input type="number" step="0.01" id="price" name="price" value="@Model?.Price" required />
            </div>

            @if (Model?.EventType == "Sport")
            {
                <div class="form-group">
                    <label for="teamA">Team A</label>
                    <input type="text" id="teamA" name="teamA" value="@Model?.TeamA" required />
                </div>

                <div class="form-group">
                    <label for="teamB">Team B</label>
                    <input type="text" id="teamB" name="teamB" value="@Model?.TeamB" required />
                </div>

                <div class="form-group">
                    <label for="tournament">Tournament</label>
                    <input type="text" id="tournament" name="tournament" value="@Model?.Tournament" required />
                </div>

                <div class="form-group">
                    <label for="sport">Sport</label>
                    <input type="text" id="sport" name="sport" value="@Model?.Sport" required />
                </div>
            }

            @if (Model?.EventType == "Entertainment")
            {
                <div class="form-group">
                    <label for="performerName">Performer Name</label>
                    <input type="text" id="performerName" name="performerName" value="@Model?.PerformerName" required />
                </div>

                <div class="form-group">
                    <label for="showCategory">Show Category</label>
                    <input type="text" id="showCategory" name="showCategory" value="@Model?.ShowCategory" required />
                </div>

                <div class="form-group">
                    <label for="genre">Genre</label>
                    <input type="text" id="genre" name="genre" value="@Model?.Genre" required />
                </div>

                <div class="form-group">
                    <label for="duration">Duration (minutes)</label>
                    <input type="number" id="duration" name="duration" value="@Model?.Duration" required />
                </div>

                <div class="form-group">
                    <label for="ageRestriction">Age Restriction (+)</label>
                    <input type="number" id="ageRestriction" name="ageRestriction" value="@Model?.AgeRestriction" required />
                </div>
            }

            <button type="submit" class="update-button">Update Event</button>
        </form>
    </div>

    <script>
        document.getElementById('editForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const form = e.target;
            const formData = new FormData(form);
            const eventType = formData.get('eventType');
            const id = formData.get('id');

            let url = '';
            if (eventType === 'Sport') {
                url = `/api/Vendor/Sport?id=${id}`;
            } else if (eventType === 'Entertainment') {
                url = `/api/Vendor/Entertainment?id=${id}`;
            } else {
                url = `/api/Vendor/Event?id=${id}`;
            }

            const data = {};
            formData.forEach((value, key) => {
                if (key !== 'eventType') {
                    data[key] = value;
                }
            });

            try {
                const response = await fetch(url, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    const result = await response.text();
                    alert(result);
                    // Optionally, redirect or update the UI
                } else {
                    const error = await response.text();
                    alert(`Error: ${error}`);
                }
            } catch (err) {
                console.error(err);
                alert('An unexpected error occurred.');
            }
        });
    </script>
</body>
</html>

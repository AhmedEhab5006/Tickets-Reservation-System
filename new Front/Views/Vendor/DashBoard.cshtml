@model WebApplication2.ViewModels.VendorDashboardVM
@{
    ViewData["Title"] = "Vendor Dashboard";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vendor Dashboard</title>
    <style>
        html, body {
            height: 100%;
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
        }

        nav {
            background-color: #2c3e50;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .logo {
            color: white;
            font-size: 24px;
            font-weight: bold;
        }

        .logo span {
            color: #3498db;
        }

        .navwords {
            display: flex;
            gap: 20px;
            list-style: none;
            margin: 0;
            padding: 0;
        }

        .navwords a {
            color: white;
            text-decoration: none;
            padding: 8px 15px;
            border-radius: 4px;
            transition: background-color 0.3s;
        }

        .navwords a:hover {
            background-color: #34495e;
        }

        .container {
            max-width: 1200px;
            margin: 40px auto;
            padding: 0 20px;
        }

        .section {
            background: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 30px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .section-title {
            font-size: 24px;
            color: #2c3e50;
            margin: 0;
        }

        .add-button {
            background-color: #3498db;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            text-decoration: none;
            transition: background-color 0.3s;
        }

        .add-button:hover {
            background-color: #2980b9;
        }

        .events-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .event-card {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: transform 0.3s;
        }

        .event-card:hover {
            transform: translateY(-5px);
        }

        .event-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

        .event-details {
            padding: 15px;
        }

        .event-title {
            font-size: 18px;
            color: #2c3e50;
            margin: 0 0 10px 0;
        }

        .event-info {
            color: #7f8c8d;
            margin: 5px 0;
            font-size: 14px;
        }

        .event-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .edit-button, .delete-button {
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            font-size: 14px;
            transition: background-color 0.3s;
        }

        .edit-button {
            background-color: #3498db;
            color: white;
        }

        .edit-button:hover {
            background-color: #2980b9;
        }

        .delete-button {
            background-color: #e74c3c;
            color: white;
        }

        .delete-button:hover {
            background-color: #c0392b;
        }

        .status-badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: bold;
            margin-left: 10px;
        }

        .status-pending {
            background-color: #f1c40f;
            color: #fff;
        }

        .status-approved {
            background-color: #2ecc71;
            color: #fff;
        }

        .status-rejected {
            background-color: #e74c3c;
            color: #fff;
        }

        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 4px;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        @@media (max-width: 768px) {
            .container {
                margin: 20px 10px;
            }

            .events-grid {
                grid-template-columns: 1fr;
            }

            .section-header {
                flex-direction: column;
                gap: 10px;
                text-align: center;
            }
        }
    </style>
</head>
<body>
    <nav>
        <div class="logo">Vendor<span>Hub</span></div>
        <ul class="navwords">
            <li><a href="@Url.Action("DashBoard", "Vendor")">Dashboard</a></li>
            <li><a href="@Url.Action("AddSportEvent", "Vendor")">Add Sports Event</a></li>
            <li><a href="@Url.Action("AddEntertainmentEvent", "Vendor")">Add Entertainment Event</a></li>
            <li><a href="@Url.Action("Logout", "Account")">Logout</a></li>
        </ul>
    </nav>

    <div class="container">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-error">
                @TempData["ErrorMessage"]
            </div>
        }

        <div class="section">
            <div class="section-header">
                <h2 class="section-title">Sports Events</h2>
                <a href="@Url.Action("AddSportEvent", "Vendor")" class="add-button">Add New Sports Event</a>
            </div>
            <div class="events-grid">
                @if (Model.SportsEvents != null && Model.SportsEvents.Any())
                {
                    foreach (var sportEvent in Model.SportsEvents)
                    {
                        <a href="@Url.Action("EditSportEvent", "Vendor", new { id = sportEvent.id })" class="event-card" style="text-decoration:none;color:inherit;display:block;">
                            <div class="event-details">
                                <div style="display:flex;justify-content:center;align-items:center;gap:10px;background:#fafafa;margin-bottom:10px;">
                                    <img src="@sportEvent.team1Image" alt="@sportEvent.team1" style="width:80px;height:80px;object-fit:contain;border-radius:8px;" />
                                    <span style="font-weight:bold;font-size:22px;">VS</span>
                                    <img src="@sportEvent.team2Image" alt="@sportEvent.team2" style="width:80px;height:80px;object-fit:contain;border-radius:8px;" />
                                </div>
                                <h3 class="event-title">
                                    @sportEvent.team1 vs @sportEvent.team2
                                    <span class="status-badge status-@sportEvent.status.ToLower()">@sportEvent.status</span>
                                </h3>
                                <div class="event-info">
                                    <h3>@sportEvent.team1 vs @sportEvent.team2</h3>
                                    <p>@sportEvent.tournament - @sportEvent.tournamentStage</p>
                                    <p>@sportEvent.sport</p>
                                    <p>@sportEvent.location</p>
                                    <p>@sportEvent.numberOfSeats seats</p>
                                    <p>Date: @(sportEvent.date != null ? sportEvent.date.ToString("yyyy-MM-dd HH:mm") : "N/A")</p>
                                    <p>Number of Seats: @sportEvent.numberOfSeats</p>
                                </div>
                                <div class="event-actions">
                                    <span class="edit-button">Edit</span>
                                    <a href="@Url.Action("DeleteSportEvent", "Vendor", new { id = sportEvent.id })" class="delete-button" onclick="return confirm('Are you sure you want to delete this event?')">Delete</a>
                                </div>
                            </div>
                        </a>
                    }
                }
                else
                {
                    <p>No sports events found.</p>
                }
            </div>
        </div>

        <div class="section">
            <div class="section-header">
                <h2 class="section-title">Entertainment Events</h2>
                <a href="@Url.Action("AddEntertainmentEvent", "Vendor")" class="add-button">Add New Entertainment Event</a>
            </div>
            <div class="events-grid">
                @if (Model.EntertainmentEvents != null && Model.EntertainmentEvents.Any())
                {
                    foreach (var entertainmentEvent in Model.EntertainmentEvents)
                    {
                        <div class="event-card">
                            <img src="@entertainmentEvent.EventImage" alt="@entertainmentEvent.PerformerName" class="event-image">
                            <div class="event-details">
                                <h3 class="event-title">
                                    @entertainmentEvent.PerformerName
                                    <span class="status-badge status-@entertainmentEvent.status.ToLower()">@entertainmentEvent.status</span>
                                </h3>
                                <p class="event-info">@entertainmentEvent.showCategory</p>
                                <p class="event-info">@entertainmentEvent.genre</p>
                                <p class="event-info">@entertainmentEvent.date.ToString("MMM dd, yyyy HH:mm")</p>
                                <p class="event-info">@entertainmentEvent.location</p>
                                <div class="event-actions">
                                    <a href="@Url.Action("EditEntertainmentEvent", "Vendor", new { id = entertainmentEvent.EventId })" class="edit-button">Edit</a>
                                    <a href="@Url.Action("DeleteEntertainmentEvent", "Vendor", new { id = entertainmentEvent.EventId })" class="delete-button" onclick="return confirm('Are you sure you want to delete this event?')">Delete</a>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No entertainment events found.</p>
                }
            </div>
        </div>
    </div>
</body>
</html>